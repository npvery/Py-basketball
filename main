##Import libraries
import pandas as pd
import numpy as np
import sklearn as sk
from sklearn import preprocessing
import seaborn as sns
import matplotlib as plt

##Read in data using pandas
players = pd.read_csv("C:/Users/nicholasve/Desktop/Other/1 - Projects/Data/Players.csv", header = 0)
stats = pd.read_csv("C:/Users/nicholasve/Desktop/Other/1 - Projects/Data/Seasons_Stats.csv", header = 0)

##Visualize using seaborn
sns.barplot(x = "FT%", y = "3P%", data = stats)
  """This plot shows a couple things. One, there is a clear positive relationship between the two. Two, lots of preprocessing will be 
  necessary here. There are a lot of players who maybe only took a couple shots in their whole careers; make "qualified" players those 
  who took at least 100 shots during their career. Three, binning might be pretty important here; this dataset is huge, and kind of 
  unintelligible in the graph."""
sns.barplot(x = "Age", y = "eFG%", data = stats)  


###Begin preprocessing of "players" set.
###Notes: Players have multiple rows in years when they're traded. Combine these.
#Change ages to integers.
#Create "Minutes per Game" column if not included.
#Have to qualify these variables. Remove anyone who didn't play at least 100 minutes that season.


#Drop useless 'blanl' and 'blank2' columns.
stats.drop(['blanl', 'blank2'], axis = 1, inplace = True)

#Drop entries w/ no name.
null_columns = stats.columns[stats.isnull().any()]
stats.drop([stats['Player'].isnull()][null_columns])

#Define functon to clean up np.nans in data
def clean(data, var, new_val):
  data[var].replace(np.nan, new_val, inplace = True)
  return data

#Cleans every column
for column in stats:
    clean(stats, column, -1)
    
clean(stats, 'MP', -1)
clean(stats, 'G', -1)
clean(stats, 'Age', -1)

#Get rid of NaNs, and change ages to integers.
stats['Age'] = stats['Age'].replace(np.nan, -1)
stats['Age'] = stats['Age'].apply(lambda x: int(x))

#Bin GS variable to make it easier to visualize
stats['GS'].replace(np.nan, -1, inplace = True)
bins = [-2, -0.5, 10, 20, 30, 40, 50, 60, 70, 120]
names = ["Unknown", "0-10", "10-20", "20-30", "30-40", "40-50", "50-60", "60-70", "70+"]
stats['GS'] = pd.cut(stats.GS, bins, labels = names)



#Bin FT% variable to make it easier to visualize
def clean_FT(data):
  data['FT%'].replace(np.nan, -.5, inplace = True)
  bins = [-1, 0, 30, 50, 60, 70, 80, 90, 99, 1000]
  names = ['Unknown', '<30', '30-50', '51-60', '61-70', '71-80', '81-90', '91-99', 'Perfect']
  data['FT%'] = pd.cut(data['FT%'], bins, labels = names)

#Remove unqualified players. 'Qualified' here is defined as having played more than 100 minutes in a season.
stats = stats[stats.MP >= 100]

#Remove players with <50 free throw attempts (FTA)
def qualify_FTA(data):
  data['FTA'] = data[data['FTA'] >= 50]

#Add minutes per game column.
def add_MPG(data):
  MPG = data['MP'] / data['G']
  data.insert(9, 'MPG', MPG)
 
 
    

